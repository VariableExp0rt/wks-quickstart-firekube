Exercise 1.

kubectl create ns mynamespace
kubectl run --image=nginx nginx --restart=Never -n mynamespace

Exercise 2.

kubectl run nginx --image=nginx -n mynamespace -o yaml > newpod.yml
cat newpod.yml
kubectl apply -f newpod.yml -n mynamespace
OR
kubectl get pod/nginx -o yaml > newpod.yml 
cat newpod.yml
kubectl create -f newpod.yml -n mynamespace

Exercise 3.

kubectl run -it --image=busybox busybox --generator=run-pod/v1 -- env
Output:
	PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
	HOSTNAME=busybox
	TERM=xterm
	KUBERNETES_PORT_443_TCP_PROTO=tcp
	KUBERNETES_PORT_443_TCP_PORT=443
	KUBERNETES_PORT_443_TCP_ADDR=10.96.0.1
	KUBERNETES_SERVICE_HOST=10.96.0.1
	KUBERNETES_SERVICE_PORT=443
	KUBERNETES_SERVICE_PORT_HTTPS=443
	KUBERNETES_PORT=tcp://10.96.0.1:443
	KUBERNETES_PORT_443_TCP=tcp://10.96.0.1:443
	HOME=/root

Exercise 4.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: busybox
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox-test
  template:
    metadata:
      labels:
        app: busybox-test
    spec:
      containers:
      - name: test  
        image: busybox
        args:
        - env

kubectl apply -f exercise-3.yml
deployment.apps/busybox created
@Liams-MBP kubernetes-practice-questions % kubectl logs deployment/busybox
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
HOSTNAME=busybox-5b6c4bd4f9-dl2fg
KUBERNETES_PORT=tcp://10.96.0.1:443
KUBERNETES_PORT_443_TCP=tcp://10.96.0.1:443
KUBERNETES_PORT_443_TCP_PROTO=tcp
KUBERNETES_PORT_443_TCP_PORT=443
KUBERNETES_PORT_443_TCP_ADDR=10.96.0.1
KUBERNETES_SERVICE_HOST=10.96.0.1
KUBERNETES_SERVICE_PORT=443
KUBERNETES_SERVICE_PORT_HTTPS=443
HOME=/root
@Liams-MBP kubernetes-practice-questions %

Could also be done with;
kubectl run busybox --image=busybox --restart=Never --dry-run -o yaml --command -- env > envpod.yaml

Exercise 5.

kubectl create ns myns --dry-run -o yaml

Exercise 6.

wks-quickstart-firekube % kubectl create quota myrq --hard=cpu=1,memory=1Gi,pods=2 --dry-run=client -o yaml
apiVersion: v1
kind: ResourceQuota
metadata:
  creationTimestamp: null
  name: myrq
spec:
  hard:
    cpu: "1"
    memory: 1Gi
    pods: "2"
status: {}

Exercise 7.

kubectl get pods --all-namespaces

Exercise 8.

kubectl run nginx-exercise --image=nginx --port=80

Exercise 9.

kubectl describe pod/<pod name>

Exercise 10.

kubectl logs pod/<podname>

Exercise 11.

kubectl logs nginx-5948844774-6mdp5 --previous

Exercise 12.

kubectl exec -it nginx-5948844774-6mdp5 -- /bin/sh

Exercise 13.

kubectl run -it --image=busybox busybox-again -- /bin/echo 'hello world'
OR 
kubectl run -it --image=busybox busybox-again -- /bin/sh -c 'echo hello world'

Exercise 14.
//I did not know this existed in kubectl (--rm), this is useful.
kubectl run busybox --image=busybox -it --rm --restart=Never -- /bin/sh -c 'echo hello world' 

Exercise 15.
//Again the --rm is useful for cleaning up after yourself when starting debugging pods or when doing quick deployment tests.
kubectl run -it nginx-test --image=nginx --env="var1=var1" --rm  -- env
